★★ 상속과 인터페이스 ★★

양념장 Class

>> 상속 받아서 오징어볶음 Class
   (이용해서)     쭈꾸미볶음 Class
	        진미채볶음 Class

- 양념장을 미리 만들어놓아서 가져다가 사용만 하면 된다.
>> 장점 : 재사용성, 통일성
	>> 유지보수가 편하다.(다 맛이 없으면 양념장의 문제 >> 양념장 바꾸면 해결)


* table마다 DAO를 만드는데, 커넥션, 드라이버로드 등은 겹친다. 비밀번호를 바꾸는경우 DAO마다 다 수정해야한다.
 >> 공통된 정보(멤버변수, conn() 등)을 별도로 만들어서 DAO가 상속받아서 사용하게하면 Super Class만 수정하면 된다.
	>> 유지보수가 좋다. 코드의 중복이 적다. 통일성(메서드명과 변수명)이 있다.

  Super Class(부모 클래스)			Sub Class(자식 클래스)
     super.				   this.
-------DB_info Class----------        상속받음
l    멤버변수		l        <------	IdeaDAO<ideabank Table>
l    public boolean conn(){}  l        <------  	MemberDAO<member Table>
l    public void init(){}	l        <------	EventDAO<event Table>
-------------------------------


------------Sub Class------------  
l	--Super class--	    l
l	l	      l         l
l	l                 l         l   	----> super class를 확장
l	l---------------l         l
-----------------------------------

* 부모가 유전자, 습관, 행동을 자식에게 물려주듯, 멤버변수와 메서드를 물려주는 것. 유지보수가 좋고 코드의 중복이 적고 통일성이 있다.
받은 유전자, 습관, 행동은 같지만 자식마다 다른 특성을 가지 듯 Sub Class마다 다른 부분 존재한다.

* 특징
   ***코드중복 -> 자바 dao설계시 드라이버로드 커넥션을 부모에 주면 된다.
   ***단일상속 -> Sub Class는 하나의 Super Class만 가질 수 있다.(Super Class는 여럿의 Sub Class를 가질 수 있다.)
   유지보수 -> 서브클래스의 중복된 코드를 슈퍼클래스에 만들면 되고, 
   통일성 -> 네이밍 통일성을 맞추면 협업시 좋다.


* is a(일반적으로 상속하는 방법)와 has a
	1. is a
	  >> super class 자원을 확장해서 sub class를 만든다.
	2. has a
  	  >> sub class에서 이 기능을 포함하고 있다.


* 상속 정리
>> 	  1. 개념 - super class(멤버변수와 메서드) 확장하여 sub class 만든 것 
      2. 특징 - 단일상속, 코드중복 감소, 통일성, 유지보수
      3. methods override
      4. 다형성
      5. is a(일반적으로 상속하는 방법)와 has a


** 객체지향 언어 특징 : 추상화, 캡슐화, 상속, 다형성(다형성의 예 중 하나가 상속)

추상화 >> 클래스 생성
캡슐화 >> 내부자원 은닉화
상속 >> super class가 sub class에 자원을 확장하고 sub class 정의
다형성 >> super class의 변수가 sub class의 객체의 주소값을 가질 수 있다. 다양한(다른) 타입의 주소를 가질 수 있다(상속의 관계를 가질 경우)

-------------------------------------------------------------------------------------------------------------------
1. 정의 : super class의 자원(멤버변수, 메서드)를 sub class가 상속받아 sub class를 정의한 것.(sub class를 확장)
		 super class 자원을 sub class가 사용할 수 있고, 자원을 참조할 수 있는 것
2. 특징 : 단일 상속, 중복코드 제거, 유지보수, 통일성
3. 메서드 오버라이드
  - sub class 자원 중, 메서드를 서브클래스에서 재정의

추상 메서드와 추상 클래스
   - 추상 메서드가 하나라도 있으면 추상 클래스가 있어야 한다.
   - 추상 메서드 : 메서드 선언은 했으나 구현은 되지 않은 메서드. 따라서 sub class가 override 해야 한다.
   	public void kkk(){} -> 구현 된 상태(내용만 없을 뿐)
   	public void kkk(); -> 선언만 되고 구현되지 않은 상태
   	public abstract void kkk(); -> 추상 메서드 : sub class가 override 강제로 해야한다.(무조건 해야 한다)


4. 다형성
  - 하나의 변수가 다양한 타입의 객체의 주소를 저장
  - 다형성 특징을 이용하여 상속 관계에서 super class 변수로 sub class 객체에 접근(참조)

5. is a 관계
  - A는 B이다. 슈퍼클래스를 상속받아 B가 되었다.
  - 동물원 SuperUnit을 가지고 tiger를 만들었다
  
  
  
  (SuperClass)JFrame(자바 awt,swing_package제공)
  ----extends(상속)----> 
  (SubClass)MainFrame[ActionListner(이벤트 동작 처리기능 제공)인터페이스를(_Java제공)implements(구현)]
  
  